/*
 *  rcc_handlers.h
 *
 *  This is a part of a RapidControl SDK source code library.
 *
 *  Copyright (C) 2001 WindRiver Systems
 *  Version 3.30
 *  All rights reserved.
 *
 */


/* WARNING:  This file will be generated by a RapidControl Integration
 * Tool.  Any changes made to this file may be overwritten by
 * subsequent uses of the tool. */

#ifndef __RCC_HANDLERS_H_HEADER__
#define __RCC_HANDLERS_H_HEADER__

extern RLSTATUS rcc_clear_counters(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_clear_mac_addr_table(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_bootdelay(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_ip(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_mirror_destination_port(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_mirror_source_port(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_delete(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_domain(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_no_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_domain_fail_times(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_domain_hello_times(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_domain_primary_port_disable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_domain_primary_port_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_domain_ring_port(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_mode(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_obring_new(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_port(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS config_port_no_security(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS config_port_security(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_port_security_age_time(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_port_security_macaddr(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_port_security_no_macaddr(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_port_security_maximum(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_no_support_display(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_chan_num_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_chan_param_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_signal_enable_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_signal_no_enable_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_jitter_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_samp_cycle_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_signal_show(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_work_mode_cofig(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_traffic_statistic(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_trap_add(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_trap_delete(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_trap_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_trap_no_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_trap_server_mac(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_config_trap_show(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_UserAccess(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_UserAdd(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_UserDelete(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_UserPassword(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_UserShow(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_diag(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_eeprom_clear(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_eeprom_dump(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_eeprom_format(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_eeprom_test(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_login(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_module(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_obring_disable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_obring_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_obring_reboot(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_switch_getreg(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_debug_switch_setreg(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_enable(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_exit(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_Help(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_HelpEdit(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS RCC_EXEC_HelpGlobals(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_history(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_ping(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_reset(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_signal(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_counters(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_device(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_mac_addr_table(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_memory(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_obring(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_obring_topo(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_port_config(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_port_neigbor(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_port_status(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_port_traffic(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_priority_queue_map(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_qos_set(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_register(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_system(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_task(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_task_runtime(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_uart(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_show_version(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_show_vlan(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_tftp(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);
extern RLSTATUS rcc_exec_tree(cli_env *pCliEnv, paramList *pParams, sbyte *pAuxBuf);

#endif /* __RCC_HANDLERS_H_HEADER__ */
